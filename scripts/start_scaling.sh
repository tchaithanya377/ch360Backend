#!/bin/bash
# Script to start horizontal scaling setup

echo "üöÄ Starting CampusHub360 Horizontal Scaling Setup"
echo "=================================================="

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Check if required files exist
if [ ! -f "docker-compose.scaling.yml" ]; then
    echo "‚ùå docker-compose.scaling.yml not found"
    exit 1
fi

if [ ! -f "nginx.conf" ]; then
    echo "‚ùå nginx.conf not found"
    exit 1
fi

if [ ! -f "gunicorn.conf.py" ]; then
    echo "‚ùå gunicorn.conf.py not found"
    exit 1
fi

echo "‚úÖ All required files found"

# Stop any existing containers
echo "üõë Stopping existing containers..."
docker-compose -f docker-compose.scaling.yml down

# Build and start services
echo "üî® Building and starting services..."
docker-compose -f docker-compose.scaling.yml up --build -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Check service health
echo "üè• Checking service health..."

# Check Django instances
for port in 8000 8001 8002 8003; do
    if curl -f http://localhost:$port/health/ > /dev/null 2>&1; then
        echo "‚úÖ Django instance on port $port is healthy"
    else
        echo "‚ùå Django instance on port $port is not responding"
    fi
done

# Check Redis
if docker exec campushub_redis redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is healthy"
else
    echo "‚ùå Redis is not responding"
fi

# Check PostgreSQL
if docker exec campushub_postgres pg_isready -U campushub -d campushub360 > /dev/null 2>&1; then
    echo "‚úÖ PostgreSQL is healthy"
else
    echo "‚ùå PostgreSQL is not responding"
fi

# Check NGINX
if curl -f http://localhost/health/ > /dev/null 2>&1; then
    echo "‚úÖ NGINX load balancer is healthy"
else
    echo "‚ùå NGINX load balancer is not responding"
fi

echo ""
echo "üéâ Horizontal scaling setup complete!"
echo "=================================================="
echo "üìä Services running:"
echo "   ‚Ä¢ NGINX Load Balancer: http://localhost"
echo "   ‚Ä¢ Django Instance 1: http://localhost:8000"
echo "   ‚Ä¢ Django Instance 2: http://localhost:8001"
echo "   ‚Ä¢ Django Instance 3: http://localhost:8002"
echo "   ‚Ä¢ Django Instance 4: http://localhost:8003"
echo "   ‚Ä¢ Redis Cache: localhost:6379"
echo "   ‚Ä¢ PostgreSQL DB: localhost:5432"
echo "   ‚Ä¢ Redis Commander: http://localhost:8081"
echo ""
echo "üß™ Test the setup:"
echo "   curl http://localhost/health/"
echo "   curl http://localhost/api/health/"
echo ""
echo "üìà Expected performance:"
echo "   ‚Ä¢ 4x Django instances"
echo "   ‚Ä¢ Load balanced requests"
echo "   ‚Ä¢ Redis caching"
echo "   ‚Ä¢ Target: 5,000+ RPS"
echo ""
echo "üõë To stop: docker-compose -f docker-compose.scaling.yml down"
