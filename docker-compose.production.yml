services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: campushub360:latest
    command: ./run-gunicorn.sh
    environment:
      - DJANGO_SETTINGS_MODULE=campshub360.settings
      - DEBUG=False
      - SECRET_KEY=change-me-in-prod-please
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=campushub
      - POSTGRES_USER=campushub
      - POSTGRES_PASSWORD=Campushub123
      - POSTGRES_HOST=campushub.cl00sagomrhg.ap-south-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=require
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,13.232.220.214,ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,.campushub360.xyz
      - CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:8000,https://localhost,https://localhost:3000,https://localhost:5173,https://localhost:8000,http://127.0.0.1,http://127.0.0.1:3000,http://127.0.0.1:5173,http://127.0.0.1:8000,https://127.0.0.1,https://127.0.0.1:3000,https://127.0.0.1:5173,https://127.0.0.1:8000,http://0.0.0.0,http://0.0.0.0:3000,http://0.0.0.0:5173,http://0.0.0.0:8000,http://13.232.220.214,http://13.232.220.214:8000,https://13.232.220.214,https://13.232.220.214:8000,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://campushub360.xyz,https://www.campushub360.xyz
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://localhost:3000,https://localhost:5173
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_started

  redis:
    image: redis:7
    command: redis-server --appendonly yes
    volumes:
      - redisdata:/data

volumes:
  redisdata:


