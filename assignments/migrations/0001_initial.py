# Generated by Django 5.1.4 on 2025-09-06 18:14

import assignments.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0003_perf_indexes'),
        ('faculty', '0003_faculty_department_ref'),
        ('students', '0005_student_indexes'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignmentCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('color_code', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Assignment Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('due_date', models.DateTimeField()),
                ('late_submission_allowed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('CLOSED', 'Closed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=15)),
                ('is_group_assignment', models.BooleanField(default=False)),
                ('max_group_size', models.PositiveIntegerField(default=1, help_text='Maximum group size for group assignments')),
                ('attachment_files', models.JSONField(blank=True, default=list, help_text='List of file information for assignment attachments')),
                ('assigned_to_programs', models.ManyToManyField(blank=True, help_text='Academic programs this assignment is assigned to', related_name='assignments', to='academics.academicprogram')),
                ('assigned_to_students', models.ManyToManyField(blank=True, help_text='Specific students this assignment is assigned to', related_name='assignments', to='students.student')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='faculty.faculty')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments', to='assignments.assignmentcategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('comment_type', models.CharField(choices=[('GENERAL', 'General Comment'), ('CLARIFICATION', 'Clarification'), ('FEEDBACK', 'Feedback'), ('QUESTION', 'Question'), ('ANNOUNCEMENT', 'Announcement')], default='GENERAL', max_length=15)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='assignments.assignment')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='assignments.assignmentcomment')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentGrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('grade_letter', models.CharField(blank=True, choices=[('A+', 'A+'), ('A', 'A'), ('A-', 'A-'), ('B+', 'B+'), ('B', 'B'), ('B-', 'B-'), ('C+', 'C+'), ('C', 'C'), ('C-', 'C-'), ('D+', 'D+'), ('D', 'D'), ('F', 'F'), ('P', 'Pass'), ('NP', 'No Pass')], max_length=2, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_grades', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-graded_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_name', models.CharField(max_length=100)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='assignments.assignment')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='led_groups', to='students.student')),
                ('members', models.ManyToManyField(related_name='assignment_groups', to='students.student')),
            ],
            options={
                'ordering': ['group_name'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes from student', null=True)),
                ('status', models.CharField(choices=[('SUBMITTED', 'Submitted'), ('DRAFT', 'Draft'), ('LATE', 'Late Submission'), ('RESUBMITTED', 'Resubmitted')], default='SUBMITTED', max_length=15)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('is_late', models.BooleanField(default=False)),
                ('attachment_files', models.JSONField(blank=True, default=list, help_text='List of file information for submission attachments')),
                ('feedback', models.TextField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assignments.assignment')),
                ('grade', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submission', to='assignments.assignmentgrade')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to='students.student')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to=assignments.models.assignment_file_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'jpg', 'jpeg', 'png', 'gif', 'zip', 'rar'])])),
                ('file_type', models.CharField(choices=[('ASSIGNMENT', 'Assignment File'), ('SUBMISSION', 'Submission File')], max_length=15)),
                ('file_size', models.BigIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='assignments.assignment')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='assignments.assignmentsubmission')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('is_group_assignment', models.BooleanField(default=False)),
                ('max_group_size', models.PositiveIntegerField(default=1)),
                ('template_data', models.JSONField(default=dict, help_text='Additional template configuration data')),
                ('is_public', models.BooleanField(default=False, help_text='Available to all faculty')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assignments.assignmentcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['faculty', 'status'], name='assignments_faculty_44f346_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['due_date'], name='assignments_due_dat_7a9bd6_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['status', 'due_date'], name='assignments_status_a60348_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentcomment',
            index=models.Index(fields=['assignment', 'created_at'], name='assignments_assignm_8b0a16_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentcomment',
            index=models.Index(fields=['author'], name='assignments_author__575e37_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentgrade',
            index=models.Index(fields=['graded_at'], name='assignments_graded__da07b9_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentgrade',
            index=models.Index(fields=['grade_letter'], name='assignments_grade_l_2abd08_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentgroup',
            unique_together={('assignment', 'group_name')},
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['assignment', 'student'], name='assignments_assignm_e2e7ee_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['submission_date'], name='assignments_submiss_f09516_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['status'], name='assignments_status_4386ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentsubmission',
            unique_together={('assignment', 'student')},
        ),
        migrations.AddIndex(
            model_name='assignmentfile',
            index=models.Index(fields=['assignment', 'file_type'], name='assignments_assignm_99f76c_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentfile',
            index=models.Index(fields=['uploaded_at'], name='assignments_uploade_8afc6d_idx'),
        ),
    ]
