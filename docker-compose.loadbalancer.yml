version: '3.8'

services:
  # Nginx Load Balancer
  nginx-lb:
    image: nginx:alpine
    container_name: campushub_nginx_lb
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/app/static:ro
      - ./media:/app/media:ro
    depends_on:
      - web1
      - web2
      - web3
      - web4
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - campushub_network

  # Django Application Instances (Multiple)
  web1:
    build:
      context: .
      dockerfile: Dockerfile
    image: campushub360:latest
    container_name: campushub_web1
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=campshub360.settings
      - DEBUG=False
      - SECRET_KEY=django-insecure-$(openssl rand -base64 32)
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_WORKERS=4
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=campushub360
      - POSTGRES_USER=campushub
      - POSTGRES_PASSWORD=Campushub123
      - POSTGRES_HOST=campushub.cl00sagomrhg.ap-south-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=require
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,13.232.220.214,ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,.campushub360.xyz
      - CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:8000,https://localhost,https://localhost:3000,https://localhost:5173,https://localhost:8000,http://127.0.0.1,http://127.0.0.1:3000,http://127.0.0.1:5173,http://127.0.0.1:8000,https://127.0.0.1,https://127.0.0.1:3000,https://127.0.0.1:5173,https://127.0.0.1:8000,http://0.0.0.0,http://0.0.0.0:3000,http://0.0.0.0:5173,http://0.0.0.0:8000,http://13.232.220.214,http://13.232.220.214:8000,https://13.232.220.214,https://13.232.220.214:8000,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://campushub360.xyz,https://www.campushub360.xyz
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://localhost:3000,https://localhost:5173
    command: ./run-gunicorn.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_started
    networks:
      - campushub_network

  web2:
    build:
      context: .
      dockerfile: Dockerfile
    image: campushub360:latest
    container_name: campushub_web2
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=campshub360.settings
      - DEBUG=False
      - SECRET_KEY=django-insecure-$(openssl rand -base64 32)
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_WORKERS=4
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=campushub360
      - POSTGRES_USER=campushub
      - POSTGRES_PASSWORD=Campushub123
      - POSTGRES_HOST=campushub.cl00sagomrhg.ap-south-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=require
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,13.232.220.214,ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,.campushub360.xyz
      - CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:8000,https://localhost,https://localhost:3000,https://localhost:5173,https://localhost:8000,http://127.0.0.1,http://127.0.0.1:3000,http://127.0.0.1:5173,http://127.0.0.1:8000,https://127.0.0.1,https://127.0.0.1:3000,https://127.0.0.1:5173,https://127.0.0.1:8000,http://0.0.0.0,http://0.0.0.0:3000,http://0.0.0.0:5173,http://0.0.0.0:8000,http://13.232.220.214,http://13.232.220.214:8000,https://13.232.220.214,https://13.232.220.214:8000,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://campushub360.xyz,https://www.campushub360.xyz
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://localhost:3000,https://localhost:5173
    command: ./run-gunicorn.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_started
    networks:
      - campushub_network

  web3:
    build:
      context: .
      dockerfile: Dockerfile
    image: campushub360:latest
    container_name: campushub_web3
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=campshub360.settings
      - DEBUG=False
      - SECRET_KEY=django-insecure-$(openssl rand -base64 32)
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_WORKERS=4
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=campushub360
      - POSTGRES_USER=campushub
      - POSTGRES_PASSWORD=Campushub123
      - POSTGRES_HOST=campushub.cl00sagomrhg.ap-south-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=require
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,13.232.220.214,ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,.campushub360.xyz
      - CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:8000,https://localhost,https://localhost:3000,https://localhost:5173,https://localhost:8000,http://127.0.0.1,http://127.0.0.1:3000,http://127.0.0.1:5173,http://127.0.0.1:8000,https://127.0.0.1,https://127.0.0.1:3000,https://127.0.0.1:5173,https://127.0.0.1:8000,http://0.0.0.0,http://0.0.0.0:3000,http://0.0.0.0:5173,http://0.0.0.0:8000,http://13.232.220.214,http://13.232.220.214:8000,https://13.232.220.214,https://13.232.220.214:8000,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://campushub360.xyz,https://www.campushub360.xyz
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://localhost:3000,https://localhost:5173
    command: ./run-gunicorn.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_started
    networks:
      - campushub_network

  web4:
    build:
      context: .
      dockerfile: Dockerfile
    image: campushub360:latest
    container_name: campushub_web4
    restart: unless-stopped
    environment:
      - DJANGO_SETTINGS_MODULE=campshub360.settings
      - DEBUG=False
      - SECRET_KEY=django-insecure-$(openssl rand -base64 32)
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_WORKERS=4
      - REDIS_URL=redis://redis:6379/0
      - POSTGRES_DB=campushub360
      - POSTGRES_USER=campushub
      - POSTGRES_PASSWORD=Campushub123
      - POSTGRES_HOST=campushub.cl00sagomrhg.ap-south-1.rds.amazonaws.com
      - POSTGRES_PORT=5432
      - POSTGRES_SSL_MODE=require
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,13.232.220.214,ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,.campushub360.xyz
      - CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:3000,http://localhost:5173,http://localhost:8000,https://localhost,https://localhost:3000,https://localhost:5173,https://localhost:8000,http://127.0.0.1,http://127.0.0.1:3000,http://127.0.0.1:5173,http://127.0.0.1:8000,https://127.0.0.1,https://127.0.0.1:3000,https://127.0.0.1:5173,https://127.0.0.1:8000,http://0.0.0.0,http://0.0.0.0:3000,http://0.0.0.0:5173,http://0.0.0.0:8000,http://13.232.220.214,http://13.232.220.214:8000,https://13.232.220.214,https://13.232.220.214:8000,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,http://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com,https://ec2-13-232-220-214.ap-south-1.compute.amazonaws.com:8000,https://campushub360.xyz,https://www.campushub360.xyz
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://localhost:3000,https://localhost:5173
    command: ./run-gunicorn.sh
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      redis:
        condition: service_started
    networks:
      - campushub_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: campushub_redis_lb
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - campushub_network

  # Monitoring and Health Check
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    container_name: campushub_nginx_exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx-lb:80/nginx_status'
    depends_on:
      - nginx-lb
    networks:
      - campushub_network

  # Redis Commander for monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: campushub_redis_commander_lb
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - campushub_network

volumes:
  redis_data:
    driver: local

networks:
  campushub_network:
    driver: bridge
